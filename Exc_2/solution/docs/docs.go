// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Lea Treml"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/menu": {
            "get": {
                "description": "Returns the menu of all drinks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Menu"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Drink"
                            }
                        }
                    }
                }
            }
        },
        "/api/order": {
            "post": {
                "description": "Adds an order to the db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "parameters": [
                    {
                        "description": "Order",
                        "name": "b",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Order"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/api/order/all": {
            "get": {
                "description": "Return all the placed orders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AllOrders"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    }
                }
            }
        },
        "/api/order/totalled": {
            "get": {
                "description": "Return how many times each drink was purchased",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GetTotalOrders"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Order"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Drink": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "description": "todo Add fields: Name, Price, Description with suitable types\ntodo json attributes need to be snakecase, i.e. name, created_at, my_variable, ..",
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "drink_id": {
                    "description": "foreign key",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Order System",
	Description:      "This system enables drink orders and should not be used for the forbidden Hungover Games.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
